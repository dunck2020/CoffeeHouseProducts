// <auto-generated />
using CoffeeHouseProducts.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoffeeHouseProducts.Migrations
{
    [DbContext(typeof(ProductContext))]
    partial class ProductContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoffeeHouseProducts.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Daniel Lo Nigro",
                            Text = "Hello ReactJS.NET World!"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Pete Hunt",
                            Text = "This is one comment"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Jordan Walke",
                            Text = "This is *another* comment"
                        });
                });

            modelBuilder.Entity("CoffeeHouseProducts.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarChar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarChar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Fresh brew from coffee house",
                            Name = "Lg Coffee",
                            Price = 3.00m,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fresh brew from BRC",
                            Name = "Md Coffee",
                            Price = 2.00m,
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fresh brew from BRC",
                            Name = "Sm Coffee",
                            Price = 1.00m,
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Delicious suger glazed treat",
                            Name = "Blueberry Muffin",
                            Price = 2.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Soft Cotton-Blend",
                            Name = "Sm T-Shirt",
                            Price = 20.00m,
                            Type = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
